{"version":3,"sources":["webpack:///./app/components/Footer/style.css?30f7","webpack:///./app/components/TodoTextInput/style.css?71e8","webpack:///./app/components/TodoList/style.css?14c4","webpack:///./app/index.tsx","webpack:///./app/containers/App/style.css","webpack:///./app/models/TodoModel.ts","webpack:///./app/utils/index.ts","webpack:///./app/components/Footer/index.tsx","webpack:///./app/components/TodoTextInput/index.tsx","webpack:///./app/components/Header/index.tsx","webpack:///./app/components/TodoItem/index.tsx","webpack:///./app/components/TodoList/index.tsx","webpack:///./app/containers/App/index.tsx","webpack:///./app/middleware/logger.ts","webpack:///./app/reducers/todos.ts","webpack:///./app/reducers/index.ts","webpack:///./app/store/index.ts","webpack:///./main.tsx","webpack:///./app/actions/todos.ts","webpack:///./app/components/TodoItem/style.css?4c11"],"names":["module","exports","App","path","component","TodoModel","omit","target","Object","keys","reduce","res","key","omitKeys","includes","Filter","FILTER_TITLES","SHOW_ALL","SHOW_ACTIVE","SHOW_COMPLETED","renderTodoCount","activeCount","itemWord","className","renderFilterLink","filter","onClickFilter","selectedFilter","style","cursor","onClick","children","renderClearButton","completedCount","onClickClearCompleted","render","this","map","defaultProps","props","context","state","text","handleBlur","bind","handleSubmit","handleChange","event","currentTarget","value","trim","which","onSave","newTodo","setState","classes","editing","type","autoFocus","placeholder","onBlur","onChange","onKeyDown","handleSave","length","addTodo","handleDoubleClick","id","deleteTodo","editTodo","element","todo","completeTodo","checked","completed","onDoubleClick","renderToggleAll","todos","actions","hasIncompleted","some","completeAll","FILTER_VALUES","FILTER_FUNCTIONS","handleClearCompleted","handleFilterChange","clearCompleted","history","push","filteredTodos","count","ownProps","hash","location","replace","find","dispatch","logger","store","next","action","todoReducer","handleActions","Type","ADD_TODO","payload","max","Math","DELETE_TODO","EDIT_TODO","COMPLETE_TODO","COMPLETE_ALL","CLEAR_COMPLETED","rootReducer","initialState","middleware","Router","document","getElementById","TodoActions"],"mappings":"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","file":"app.e7f1539e7516c99fd83a.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_11G5b\",\"filters\":\"_2Rdg5\",\"selected\":\"KA4tP\",\"count\":\"_2aiYj\",\"clearCompleted\":\"_2VhED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new\":\"_1LCq9\",\"edit\":\"_2TStV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"_1MAoA\",\"normal\":\"l9hMg\",\"editing\":\"_2LE8Z\",\"edit\":\"_3IEu8\",\"view\":\"cswuJ\",\"toggle\":\"_1euYG\",\"completed\":\"_1VEnC\",\"destroy\":\"_3_fjc\",\"toggleAll\":\"_1L1bM\"};","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { App as TodoApp } from 'app/containers/App';\nimport { hot } from 'react-hot-loader';\n\nexport const App = hot(module)(() => (\n  <Switch>\n    <Route path=\"/\" component={TodoApp} />\n  </Switch>\n));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_1XP1U\"};","/** TodoMVC model definitions **/\n\nexport interface TodoModel {\n  id: number;\n  text: string;\n  completed: boolean;\n}\n\nexport namespace TodoModel {\n  export enum Filter {\n    SHOW_ALL = 'all',\n    SHOW_ACTIVE = 'active',\n    SHOW_COMPLETED = 'completed'\n  }\n}\n","export function omit<T extends object, K extends keyof T>(target: T, ...omitKeys: K[]): Omit<T, K> {\n  return (Object.keys(target) as K[]).reduce(\n    (res, key) => {\n      if (!omitKeys.includes(key)) {\n        res[key] = target[key];\n      }\n      return res;\n    },\n    {} as any\n  );\n}\n","import * as React from 'react';\nimport * as style from './style.css';\nimport * as classNames from 'classnames';\nimport { TodoModel } from 'app/models';\n\nexport const FILTER_TITLES = {\n  [TodoModel.Filter.SHOW_ALL]: 'All',\n  [TodoModel.Filter.SHOW_ACTIVE]: 'Active',\n  [TodoModel.Filter.SHOW_COMPLETED]: 'Completed'\n};\n\nexport namespace Footer {\n  export interface Props {\n    filter: TodoModel.Filter;\n    activeCount?: number;\n    completedCount?: number;\n    onClickFilter: (filter: TodoModel.Filter) => any;\n    onClickClearCompleted: () => any;\n  }\n}\n\nexport class Footer extends React.Component<Footer.Props> {\n  static defaultProps: Partial<Footer.Props> = {\n    activeCount: 0,\n    completedCount: 0\n  };\n\n  renderTodoCount(): JSX.Element {\n    const { activeCount } = this.props;\n    const itemWord = activeCount === 1 ? 'item' : 'items';\n\n    return (\n      <span className={style.count}>\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n    );\n  }\n\n  renderFilterLink(filter: TodoModel.Filter): JSX.Element {\n    const { filter: selectedFilter, onClickFilter } = this.props;\n\n    return (\n      <a\n        className={classNames({ [style.selected]: filter === selectedFilter })}\n        style={{ cursor: 'pointer' }}\n        onClick={() => onClickFilter(filter)}\n        children={FILTER_TITLES[filter]}\n      />\n    );\n  }\n\n  renderClearButton(): JSX.Element | void {\n    const { completedCount, onClickClearCompleted } = this.props;\n    if (completedCount! > 0) {\n      return (\n        <button\n          className={style.clearCompleted}\n          onClick={onClickClearCompleted}\n          children={'Clear completed'}\n        />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <footer className={style.normal}>\n        {this.renderTodoCount()}\n        <ul className={style.filters}>\n          {(Object.keys(TodoModel.Filter) as (keyof typeof TodoModel.Filter)[]).map((key) => (\n            <li key={key} children={this.renderFilterLink(TodoModel.Filter[key])} />\n          ))}\n        </ul>\n        {this.renderClearButton()}\n      </footer>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as style from './style.css';\n\nexport namespace TodoTextInput {\n  export interface Props {\n    text?: string;\n    placeholder?: string;\n    newTodo?: boolean;\n    editing?: boolean;\n    onSave: (text: string) => void;\n  }\n\n  export interface State {\n    text: string;\n  }\n}\n\nexport class TodoTextInput extends React.Component<TodoTextInput.Props, TodoTextInput.State> {\n  constructor(props: TodoTextInput.Props, context?: any) {\n    super(props, context);\n    this.state = { text: this.props.text || '' };\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event: React.KeyboardEvent<HTMLInputElement>) {\n    const text = event.currentTarget.value.trim();\n    if (event.which === 13) {\n      this.props.onSave(text);\n      if (this.props.newTodo) {\n        this.setState({ text: '' });\n      }\n    }\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ text: event.target.value });\n  }\n\n  handleBlur(event: React.FocusEvent<HTMLInputElement>) {\n    const text = event.target.value.trim();\n    if (!this.props.newTodo) {\n      this.props.onSave(text);\n    }\n  }\n\n  render() {\n    const classes = classNames(\n      {\n        [style.edit]: this.props.editing,\n        [style.new]: this.props.newTodo\n      },\n      style.normal\n    );\n\n    return (\n      <input\n        className={classes}\n        type=\"text\"\n        autoFocus\n        placeholder={this.props.placeholder}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { TodoTextInput } from '../TodoTextInput';\nimport { TodoActions } from 'app/actions/todos';\n\nexport namespace Header {\n  export interface Props {\n    addTodo: typeof TodoActions.addTodo;\n  }\n}\n\nexport class Header extends React.Component<Header.Props> {\n  constructor(props: Header.Props, context?: any) {\n    super(props, context);\n    this.handleSave = this.handleSave.bind(this);\n  }\n\n  handleSave(text: string) {\n    if (text.length) {\n      this.props.addTodo({ text });\n    }\n  }\n\n  render() {\n    return (\n      <header>\n        <h1>Todos</h1>\n        <TodoTextInput newTodo onSave={this.handleSave} placeholder=\"What needs to be done?\" />\n      </header>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as style from './style.css';\nimport { TodoModel } from 'app/models';\nimport { TodoActions } from 'app/actions';\nimport { TodoTextInput } from '../TodoTextInput';\n\nexport namespace TodoItem {\n  export interface Props {\n    todo: TodoModel;\n    editTodo: typeof TodoActions.editTodo;\n    deleteTodo: typeof TodoActions.deleteTodo;\n    completeTodo: typeof TodoActions.completeTodo;\n  }\n\n  export interface State {\n    editing: boolean;\n  }\n}\n\nexport class TodoItem extends React.Component<TodoItem.Props, TodoItem.State> {\n  constructor(props: TodoItem.Props, context?: any) {\n    super(props, context);\n    this.state = { editing: false };\n  }\n\n  handleDoubleClick() {\n    this.setState({ editing: true });\n  }\n\n  handleSave(id: number, text: string) {\n    if (text.length === 0) {\n      this.props.deleteTodo(id);\n    } else {\n      this.props.editTodo({ id, text });\n    }\n    this.setState({ editing: false });\n  }\n\n  render() {\n    const { todo, completeTodo, deleteTodo } = this.props;\n\n    let element;\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput\n          text={todo.text}\n          editing={this.state.editing}\n          onSave={(text) => todo.id && this.handleSave(todo.id, text)}\n        />\n      );\n    } else {\n      element = (\n        <div className={style.view}>\n          <input\n            className={style.toggle}\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={() => todo.id && completeTodo(todo.id)}\n          />\n          <label onDoubleClick={() => this.handleDoubleClick()}>{todo.text}</label>\n          <button\n            className={style.destroy}\n            onClick={() => {\n              if (todo.id) deleteTodo(todo.id);\n            }}\n          />\n        </div>\n      );\n    }\n\n    // TODO: compose\n    const classes = classNames({\n      [style.completed]: todo.completed,\n      [style.editing]: this.state.editing,\n      [style.normal]: !this.state.editing\n    });\n\n    return <li className={classes}>{element}</li>;\n  }\n}\n","import * as React from 'react';\nimport * as style from './style.css';\nimport { TodoActions } from 'app/actions/todos';\nimport { TodoItem } from '../TodoItem';\nimport { TodoModel } from 'app/models/TodoModel';\n\nexport namespace TodoList {\n  export interface Props {\n    todos: TodoModel[];\n    actions: TodoActions;\n  }\n}\n\nexport class TodoList extends React.Component<TodoList.Props> {\n  renderToggleAll(): JSX.Element | void {\n    const { todos, actions } = this.props;\n    if (todos.length > 0) {\n      const hasIncompleted = todos.some((todo) => !todo.completed);\n      return (\n        <input\n          className={style.toggleAll}\n          type=\"checkbox\"\n          checked={hasIncompleted}\n          onChange={actions.completeAll}\n        />\n      );\n    }\n  }\n\n  render() {\n    const { todos, actions } = this.props;\n    return (\n      <section className={style.main}>\n        {this.renderToggleAll()}\n        <ul className={style.normal}>\n          {todos.map((todo) => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              completeTodo={actions.completeTodo}\n              deleteTodo={actions.deleteTodo}\n              editTodo={actions.editTodo}\n            />\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as style from './style.css';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RouteComponentProps } from 'react-router';\nimport { TodoActions } from 'app/actions';\nimport { RootState } from 'app/reducers';\nimport { TodoModel } from 'app/models';\nimport { omit } from 'app/utils';\nimport { Header, TodoList, Footer } from 'app/components';\n\nconst FILTER_VALUES = (Object.keys(TodoModel.Filter) as (keyof typeof TodoModel.Filter)[]).map(\n  (key) => TodoModel.Filter[key]\n);\n\nconst FILTER_FUNCTIONS: Record<TodoModel.Filter, (todo: TodoModel) => boolean> = {\n  [TodoModel.Filter.SHOW_ALL]: () => true,\n  [TodoModel.Filter.SHOW_ACTIVE]: (todo) => !todo.completed,\n  [TodoModel.Filter.SHOW_COMPLETED]: (todo) => todo.completed\n};\n\nexport namespace App {\n  export interface Props extends RouteComponentProps<void> {\n    todos: RootState.TodoState;\n    actions: TodoActions;\n    filter: TodoModel.Filter;\n  }\n}\n\n@connect(\n  (state: RootState, ownProps): Pick<App.Props, 'todos' | 'filter'> => {\n    const hash = ownProps.location && ownProps.location.hash.replace('#', '');\n    const filter = FILTER_VALUES.find((value) => value === hash) || TodoModel.Filter.SHOW_ALL;\n    return { todos: state.todos, filter };\n  },\n  (dispatch: Dispatch): Pick<App.Props, 'actions'> => ({\n    actions: bindActionCreators(omit(TodoActions, 'Type'), dispatch)\n  })\n)\nexport class App extends React.Component<App.Props> {\n  static defaultProps: Partial<App.Props> = {\n    filter: TodoModel.Filter.SHOW_ALL\n  };\n\n  constructor(props: App.Props, context?: any) {\n    super(props, context);\n    this.handleClearCompleted = this.handleClearCompleted.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  handleClearCompleted(): void {\n    const hasCompletedTodo = this.props.todos.some((todo) => todo.completed || false);\n    if (hasCompletedTodo) {\n      this.props.actions.clearCompleted();\n    }\n  }\n\n  handleFilterChange(filter: TodoModel.Filter): void {\n    this.props.history.push(`#${filter}`);\n  }\n\n  render() {\n    const { todos, actions, filter } = this.props;\n    const activeCount = todos.length - todos.filter((todo) => todo.completed).length;\n    const filteredTodos = filter ? todos.filter(FILTER_FUNCTIONS[filter]) : todos;\n    const completedCount = todos.reduce((count, todo) => (todo.completed ? count + 1 : count), 0);\n\n    return (\n      <div className={style.normal}>\n        <Header addTodo={actions.addTodo} />\n        <TodoList todos={filteredTodos} actions={actions} />\n        <Footer\n          filter={filter}\n          activeCount={activeCount}\n          completedCount={completedCount}\n          onClickClearCompleted={this.handleClearCompleted}\n          onClickFilter={this.handleFilterChange}\n        />\n      </div>\n    );\n  }\n}\n","import { Middleware } from 'redux';\n\nexport const logger: Middleware = (store) => (next) => (action) => {\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(action);\n  }\n  return next(action);\n};\n","import { handleActions } from 'redux-actions';\nimport { RootState } from './state';\nimport { TodoActions } from 'app/actions/todos';\nimport { TodoModel } from 'app/models';\n\nconst initialState: RootState.TodoState = [\n  {\n    id: 1,\n    text: 'Use Redux',\n    completed: false\n  }\n];\n\nexport const todoReducer = handleActions<RootState.TodoState, TodoModel>(\n  {\n    [TodoActions.Type.ADD_TODO]: (state, action) => {\n      if (action.payload && action.payload.text) {\n        return [\n          {\n            id: state.reduce((max, todo) => Math.max(todo.id || 1, max), 0) + 1,\n            completed: false,\n            text: action.payload.text\n          },\n          ...state\n        ];\n      }\n      return state;\n    },\n    [TodoActions.Type.DELETE_TODO]: (state, action) => {\n      return state.filter((todo) => todo.id !== (action.payload as any));\n    },\n    [TodoActions.Type.EDIT_TODO]: (state, action) => {\n      return state.map((todo) => {\n        if (!todo || !action || !action.payload) {\n          return todo;\n        }\n        return (todo.id || 0) === action.payload.id ? { ...todo, text: action.payload.text } : todo;\n      });\n    },\n    [TodoActions.Type.COMPLETE_TODO]: (state, action) => {\n      return state.map((todo) =>\n        todo.id === (action.payload as any) ? { ...todo, completed: !todo.completed } : todo\n      );\n    },\n    [TodoActions.Type.COMPLETE_ALL]: (state, action) => {\n      return state.map((todo) => ({ ...todo, completed: true }));\n    },\n    [TodoActions.Type.CLEAR_COMPLETED]: (state, action) => {\n      return state.filter((todo) => todo.completed === false);\n    }\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport { RootState } from './state';\nimport { todoReducer } from './todos';\n\nexport { RootState };\n\n// NOTE: current type definition of Reducer in 'redux-actions' module\n// doesn't go well with redux@4\nexport const rootReducer = combineReducers<RootState>({\n  todos: todoReducer as any\n});\n","import { Store, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { logger } from 'app/middleware';\nimport { RootState, rootReducer } from 'app/reducers';\n\nexport function configureStore(initialState?: RootState): Store<RootState> {\n  let middleware = applyMiddleware(logger);\n\n  if (process.env.NODE_ENV !== 'production') {\n    middleware = composeWithDevTools(middleware);\n  }\n\n  const store = createStore(rootReducer as any, initialState as any, middleware) as Store<\n    RootState\n  >;\n\n  if (module.hot) {\n    module.hot.accept('app/reducers', () => {\n      const nextReducer = require('app/reducers');\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { configureStore } from 'app/store';\nimport { Router } from 'react-router';\nimport { App } from './app';\n\n// prepare store\nconst history = createBrowserHistory();\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createAction } from 'redux-actions';\nimport { TodoModel } from 'app/models';\n\nexport namespace TodoActions {\n  export enum Type {\n    ADD_TODO = 'ADD_TODO',\n    EDIT_TODO = 'EDIT_TODO',\n    DELETE_TODO = 'DELETE_TODO',\n    COMPLETE_TODO = 'COMPLETE_TODO',\n    COMPLETE_ALL = 'COMPLETE_ALL',\n    CLEAR_COMPLETED = 'CLEAR_COMPLETED'\n  }\n\n  export const addTodo = createAction<PartialPick<TodoModel, 'text'>>(Type.ADD_TODO);\n  export const editTodo = createAction<PartialPick<TodoModel, 'id'>>(Type.EDIT_TODO);\n  export const deleteTodo = createAction<TodoModel['id']>(Type.DELETE_TODO);\n  export const completeTodo = createAction<TodoModel['id']>(Type.COMPLETE_TODO);\n  export const completeAll = createAction(Type.COMPLETE_ALL);\n  export const clearCompleted = createAction(Type.CLEAR_COMPLETED);\n}\n\nexport type TodoActions = Omit<typeof TodoActions, 'Type'>;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_3Ivjf\",\"toggle\":\"gyYcA\",\"destroy\":\"_6oXTL\",\"edit\":\"Dlke2\",\"editing\":\"atkUq _3Ivjf\",\"view\":\"R2I1d\",\"completed\":\"_2d4Cr\"};"],"sourceRoot":""}